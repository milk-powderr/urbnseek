class Calendar{constructor(){this.monthDiv=document.querySelector(".cal-month__current"),this.headDivs=document.querySelectorAll(".cal-head__day"),this.bodyDivs=document.querySelectorAll(".cal-body__day"),this.nextDiv=document.querySelector(".cal-month__next"),this.prevDiv=document.querySelector(".cal-month__previous")}init(){moment.locale(window.navigator.userLanguage||window.navigator.language),this.month=moment(),this.today=this.selected=this.month.clone(),this.weekDays=moment.weekdaysShort(!0),this.headDivs.forEach(((t,s)=>{t.innerText=this.weekDays[s]})),this.nextDiv.addEventListener("click",(t=>{this.addMonth()})),this.prevDiv.addEventListener("click",(t=>{this.removeMonth()})),this.bodyDivs.forEach((t=>{t.addEventListener("click",(t=>{const s=+t.target.innerHTML<10?`0${t.target.innerHTML}`:t.target.innerHTML;t.target.classList.contains("cal-day__month--next")?this.selected=moment(`${this.month.add(1,"month").format("YYYY-MM")}-${s}`):t.target.classList.contains("cal-day__month--previous")?this.selected=moment(`${this.month.subtract(1,"month").format("YYYY-MM")}-${s}`):this.selected=moment(`${this.month.format("YYYY-MM")}-${s}`),this.update()}))})),this.update()}update(){this.calendarDays={first:this.month.clone().startOf("month").startOf("week").date(),last:this.month.clone().endOf("month").date()},this.monthDays={lastPrevious:this.month.clone().subtract(1,"months").endOf("month").date(),lastCurrent:this.month.clone().endOf("month").date()},this.monthString=this.month.clone().format("MMMM YYYY"),this.draw()}addMonth(){this.month.add(1,"month"),this.update()}removeMonth(){this.month.subtract(1,"month"),this.update()}draw(){this.monthDiv.innerText=this.monthString;let t=0;if(this.calendarDays.first>1)for(let s=this.calendarDays.first;s<=this.monthDays.lastPrevious;t++)this.bodyDivs[t].innerText=s++,this.cleanCssClasses(!1,t),this.bodyDivs[t].classList.add("cal-day__month--previous");let s=!1;for(let e=1;t<=this.bodyDivs.length-1;t++)e>this.monthDays.lastCurrent&&(e=1,s=!0),this.cleanCssClasses(!0,t),s?this.bodyDivs[t].classList.add("cal-day__month--next"):(e===this.today.date()&&this.today.isSame(this.month,"day")&&this.bodyDivs[t].classList.add("cal-day__day--today"),e===this.selected.date()&&this.selected.isSame(this.month,"month")&&this.bodyDivs[t].classList.add("cal-day__day--selected"),this.bodyDivs[t].classList.add("cal-day__month--current")),this.bodyDivs[t].innerText=e++}cleanCssClasses(t,s){this.bodyDivs[s].classList.contains("cal-day__month--next")&&this.bodyDivs[s].classList.remove("cal-day__month--next"),this.bodyDivs[s].classList.contains("cal-day__month--previous")&&this.bodyDivs[s].classList.remove("cal-day__month--previous"),this.bodyDivs[s].classList.contains("cal-day__month--current")&&this.bodyDivs[s].classList.remove("cal-day__month--current"),this.bodyDivs[s].classList.contains("cal-day__day--today")&&this.bodyDivs[s].classList.remove("cal-day__day--today"),t&&this.bodyDivs[s].classList.contains("cal-day__day--selected")&&this.bodyDivs[s].classList.remove("cal-day__day--selected")}}const cal=new Calendar;cal.init();